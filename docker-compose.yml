version: '3.8'

services:
  mysql:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    container_name: mysql-server
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/init.sh:/init.sh
      - ./config.json:/config.json
    networks:
      - ${BACKEND_NETWORK}

  

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./sites/site1:/var/www/html/site1
      - ./sites/site2:/var/www/html/site2
      - ./sites/test:/var/www/html/test
      - ./sites/test2:/var/www/html/test2
      - ./sites/site10:/var/www/html/site10
      - ./sites/site11:/var/www/html/site11
      - ./sites/sitetest:/var/www/html/sitetest
    ports:
      - "${NGINX_HTTP_PORT}:80"
    depends_on:
      - site1
      - site2
      - test
      - test2
      - site10
      - site11
      - sitetest
    networks:
      - ${FRONTEND_NETWORK}

volumes:
  mysql_data:

networks:
  backend:
  frontend:
